Index: data/Models/User/UserSchema.es6
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/Models/User/UserSchema.es6	(revision )
+++ data/Models/User/UserSchema.es6	(revision )
@@ -7,7 +7,8 @@
   name: String,
   surname: String,
   age: Number,
-  hobbies: [{type: mongoose.Schema.Types.ObjectId, ref: 'Hobby'}]
+  hobbies: [{type: mongoose.Schema.Types.ObjectId, ref: 'Hobby'}],
+  friends: [{type: mongoose.Schema.Types.ObjectId, ref: 'User'}]
 });
 
 module.exports = mongoose.model('User', UserSchema);
Index: data/Models/User/UserTypeQL.es6
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/Models/User/UserTypeQL.es6	(revision )
+++ data/Models/User/UserTypeQL.es6	(revision )
@@ -9,6 +9,7 @@
   } from 'graphql';
 
 import User from './UserSchema.es6';
+import UserType from './UserTypeQL.es6';
 import HobbyType from '../Hobby/HobbyTypeQL.es6';
 
 export default new GraphQLObjectType({
@@ -29,6 +30,9 @@
     },
     hobbies:{
       type: new GraphQLList(HobbyType)
+    },
+    friends: {
+      type: new GraphQLList(UserType)
     }
   })
 });
Index: data/Models/User/UserQueriesQL.es6
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/Models/User/UserQueriesQL.es6	(revision )
+++ data/Models/User/UserQueriesQL.es6	(revision )
@@ -16,9 +16,7 @@
     type: new GraphQLList(UserType),
     resolve: () => {
       return new Promise((resolve, reject) => {
-          console.log('rfvtgbyhn');
-        User.find({}).populate('hobbies').exec((err, res) => {
-          console.log('erwtwert');
+        User.find({}).populate('hobbies friends').exec((err, res) => {
           err ? reject(err) : resolve(res);
         });
       });
@@ -34,11 +32,11 @@
     resolve: (root, {id}) => {
       return new Promise((resolve, reject) => {
         //User is a Mongoose schema
-        User.find({}).populate('hobbies').exec((err, res) => {
+        User.findById(id).populate('hobbies friends').exec((err, res) => {
           if (id == undefined) {
             err ? reject(err) : resolve(res);
           } else {
-            err ? reject(err) : resolve(res[id]);
+            err ? reject(err) : resolve(res);
           }
         });
       });
Index: data/Models/User/UserMutationsQL.es6
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- data/Models/User/UserMutationsQL.es6	(revision )
+++ data/Models/User/UserMutationsQL.es6	(revision )
@@ -10,6 +10,7 @@
 
 import UserType from './UserTypeQL.es6';
 import User from './UserSchema.es6';
+import HobbyType from '../Hobby/HobbyTypeQL.es6';
 
 export default {
   addUser:{
@@ -26,10 +27,18 @@
       age:{
         name:'age',
         type: GraphQLInt
+      },
+      hobbies:{
+        name:'hobbies',
+        type: new GraphQLList(HobbyType)
+      },
+      friends:{
+        name:'friends',
+        type: new GraphQLList(UserType)
       }
     },
-    resolve: (root, {name, surname, age}) => {
-      var newUser = new User({name:name, surname:surname, age:age});
+    resolve: (root, {name, surname, age, hobbies, friends}) => {
+      var newUser = new User({name:name, surname:surname, age:age, hobbies:hobbies, friends:friends});
 
       return new Promise((resolve, reject) => {
         newUser.save((err, res) => {
